// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialNetworkApi.Infrastructure.EfCore;

#nullable disable

namespace SocialNetworkApi.Infrastructure.EfCore.Migrations
{
    [DbContext(typeof(SocialNetworkApiContext))]
    partial class SocialNetworkApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SocialNetworkApi.Domain.MessageAgg.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("FkFromUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("FkToUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool>("Like")
                        .HasColumnType("bit");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FkToUserId");

                    b.HasIndex("FkFromUserId", "FkToUserId");

                    b.ToTable("Messages", (string)null);
                });

            modelBuilder.Entity("SocialNetworkApi.Domain.UserAgg.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AboutMe")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("SocialNetworkApi.Domain.UserRelationAgg.UserRelation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Approve")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("FkUserAId")
                        .HasColumnType("bigint");

                    b.Property<long>("FkUserBId")
                        .HasColumnType("bigint");

                    b.Property<string>("RelationRequestMessage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("FkUserBId");

                    b.HasIndex("FkUserAId", "FkUserBId")
                        .IsUnique();

                    b.ToTable("UserRelations", (string)null);
                });

            modelBuilder.Entity("SocialNetworkApi.Domain.MessageAgg.Message", b =>
                {
                    b.HasOne("SocialNetworkApi.Domain.UserAgg.User", "FromUser")
                        .WithMany("FromMessages")
                        .HasForeignKey("FkFromUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SocialNetworkApi.Domain.UserAgg.User", "ToUser")
                        .WithMany("ToMessages")
                        .HasForeignKey("FkToUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FromUser");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("SocialNetworkApi.Domain.UserRelationAgg.UserRelation", b =>
                {
                    b.HasOne("SocialNetworkApi.Domain.UserAgg.User", "UserA")
                        .WithMany("UserARelations")
                        .HasForeignKey("FkUserAId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SocialNetworkApi.Domain.UserAgg.User", "UserB")
                        .WithMany("UserBRelations")
                        .HasForeignKey("FkUserBId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserA");

                    b.Navigation("UserB");
                });

            modelBuilder.Entity("SocialNetworkApi.Domain.UserAgg.User", b =>
                {
                    b.Navigation("FromMessages");

                    b.Navigation("ToMessages");

                    b.Navigation("UserARelations");

                    b.Navigation("UserBRelations");
                });
#pragma warning restore 612, 618
        }
    }
}
